services:
  postgres:
    image: postgres:12-alpine
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    ports:
    - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgrespassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  hasura:
    build:
      context: database
    ports:
    - "8080:8080" # API
    - "9693:9693" # Migrations API
    - "9695:9695" # Migrations Console
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_DEV_MODE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

      # Set SKIP_MIGRATIONS to 1 if there are errors applying migrations & you want to debug
      SKIP_MIGRATIONS: '0'

      # HASURA_GRAPHQL_ADMIN_SECRET is a stub for development & test, it is not valid for any deployed environment
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

      # HASURA_GRAPHQL_JWT_SECRET is a stub for development & test, it is not valid for any deployed environment
      # Regenerate with: node -e "console.log(require('crypto').randomBytes(256).toString('base64'));"
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"I1J1ffr5N0wPftYwff12ZYtqpWAY1oEcmYxDbdfS7TnEt3a693gjTrXn94s0PmC+ap/S9roPY8gpWENGVNf7YxIjjhkUS+VaE7GvFmoTV5OgKTq0WZxu2hs5rOIoPXpWm6TXroZACZGc8U0BLawmzZclIb4nezyJsWPIUxP+YnQphikH//AMmMsxcDEyDGnyNdObW5SP4Pk+UuV7gKeweMNdoy1oI0M6sX2cWTdsd1BOwPteY3ef8cRaa0t2VPjGgJSiFeMbLzBaZB1m221/S3u1PhYqEBZXHVv7H+fqYjz2yaTPf12s0ohZolrtD6MzVnwFJmcX8QYSSTHr9QFmJA=="}'

      # These functions are stubbed for development & test
      FN_URL_EDYOUCATED: http://fn-edyoucated:4000
      FN_URL_GSHEETS: http://fn-gsheets:4000

      # These functions are not required for development & test
      FN_URL_TYPEFORM: http://typeform.fn.invalid
      FN_URL_FORM_RESPONSE: http://form-response.fn.invalid
    volumes:
      - ./database/migrations:/migrations
      - ./database/metadata:/metadata
    depends_on:
      postgres:
        condition: service_healthy
      fn-auth:
        condition: service_healthy
      fn-edyoucated:
        condition: service_healthy
      fn-gsheets:
        condition: service_healthy
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    environment:
      BROWSER: none # prevents "react-scripts start" from opening a browser which does not work inside the container
    stdin_open: true # prevents "react-scripts start" from exiting
    ports:
      - "3000:3000"
    volumes:
      # Uncomment the next line if you want live code reloading
      # - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      hasura:
        condition: service_healthy
  fn-auth:
    build:
      context: functions
      dockerfile: auth/Dockerfile
    ports:
      - "8000:8000"
    environment:
      # When NODE_ENV != production, function returns stubbed values
      NODE_ENV: test

      # Uncomment DEBUG to enable debug logging
      # DEBUG: '1'

      # JWT_KEY is a stub for development & test, it is not valid for any deployed environment
      JWT_KEY: I1J1ffr5N0wPftYwff12ZYtqpWAY1oEcmYxDbdfS7TnEt3a693gjTrXn94s0PmC+ap/S9roPY8gpWENGVNf7YxIjjhkUS+VaE7GvFmoTV5OgKTq0WZxu2hs5rOIoPXpWm6TXroZACZGc8U0BLawmzZclIb4nezyJsWPIUxP+YnQphikH//AMmMsxcDEyDGnyNdObW5SP4Pk+UuV7gKeweMNdoy1oI0M6sX2cWTdsd1BOwPteY3ef8cRaa0t2VPjGgJSiFeMbLzBaZB1m221/S3u1PhYqEBZXHVv7H+fqYjz2yaTPf12s0ohZolrtD6MzVnwFJmcX8QYSSTHr9QFmJA==

      # Points to the hasura service
      GRAPHQL_URL: http://hasura:8080/v1/graphql

      # Following variables are stubbed for development & test
      OAUTH_CLIENT_ID: some-client@provider.com
      OAUTH_CLIENT_SECRET: somesecret
      GSUITE_DOMAIN: techlabs.org
      GOOGLE_SERVICE_ACCOUNT_JSON: '{}'
      GOOGLE_IMPERSONATE_SUBJECT: someuser@techlabs.org
  fn-edyoucated:
    build:
      context: functions
      dockerfile: edyoucated/Dockerfile
    environment:
      # When NODE_ENV != production, function returns stubbed values
      NODE_ENV: test

      # Uncomment DEBUG to enable debug logging
      # DEBUG: '1'

      # JWT_KEY is a stub for development & test, it is not valid for any deployed environment
      JWT_KEY: I1J1ffr5N0wPftYwff12ZYtqpWAY1oEcmYxDbdfS7TnEt3a693gjTrXn94s0PmC+ap/S9roPY8gpWENGVNf7YxIjjhkUS+VaE7GvFmoTV5OgKTq0WZxu2hs5rOIoPXpWm6TXroZACZGc8U0BLawmzZclIb4nezyJsWPIUxP+YnQphikH//AMmMsxcDEyDGnyNdObW5SP4Pk+UuV7gKeweMNdoy1oI0M6sX2cWTdsd1BOwPteY3ef8cRaa0t2VPjGgJSiFeMbLzBaZB1m221/S3u1PhYqEBZXHVv7H+fqYjz2yaTPf12s0ohZolrtD6MzVnwFJmcX8QYSSTHr9QFmJA==

      # EDYOUCATED_* variables are stubbed for development & test
      EDYOUCATED_USERNAME: some@user.invalid
      EDYOUCATED_PASSWORD: test123
      EDYOUCATED_USER_POOL_ID: not-needed
      EDYOUCATED_CLIENT_ID: no-client
      EDYOUCATED_AWS_REGION: no-region
      EDYOUCATED_API_URL: https://no-edyoucated.invalid
      EDYOUCATED_ORGANIZATION_ID: an-id
  fn-gsheets:
    build:
      context: functions
      dockerfile: gsheets/Dockerfile
    environment:
      # When NODE_ENV != production, function returns stubbed values
      NODE_ENV: test

      # Uncomment DEBUG to enable debug logging
      # DEBUG: '1'

      # JWT_KEY is a stub for development & test, it is not valid for any deployed environment
      JWT_KEY: I1J1ffr5N0wPftYwff12ZYtqpWAY1oEcmYxDbdfS7TnEt3a693gjTrXn94s0PmC+ap/S9roPY8gpWENGVNf7YxIjjhkUS+VaE7GvFmoTV5OgKTq0WZxu2hs5rOIoPXpWm6TXroZACZGc8U0BLawmzZclIb4nezyJsWPIUxP+YnQphikH//AMmMsxcDEyDGnyNdObW5SP4Pk+UuV7gKeweMNdoy1oI0M6sX2cWTdsd1BOwPteY3ef8cRaa0t2VPjGgJSiFeMbLzBaZB1m221/S3u1PhYqEBZXHVv7H+fqYjz2yaTPf12s0ohZolrtD6MzVnwFJmcX8QYSSTHr9QFmJA==
  fn-certificate-generator:
    build:
      context: functions
      dockerfile: certificate-generator/Dockerfile
    ports:
      - "8001:8080"
    volumes:
      - /usr/src/app/node_modules
      - /usr/src/app/pkg/trm-api
      # - ./lib/trm-api:/usr/src/app/pkg/trm-api
      - ./functions/certificate-generator:/usr/src/app
    environment:
      # When NODE_ENV != production, function returns stubbed values
      NODE_ENV: staging

      PORT: '8080'

      # Uncomment DEBUG to enable debug logging
      # DEBUG: '1'

      # JWT_KEY is a stub for development & test, it is not valid for any deployed environment
      JWT_KEY: I1J1ffr5N0wPftYwff12ZYtqpWAY1oEcmYxDbdfS7TnEt3a693gjTrXn94s0PmC+ap/S9roPY8gpWENGVNf7YxIjjhkUS+VaE7GvFmoTV5OgKTq0WZxu2hs5rOIoPXpWm6TXroZACZGc8U0BLawmzZclIb4nezyJsWPIUxP+YnQphikH//AMmMsxcDEyDGnyNdObW5SP4Pk+UuV7gKeweMNdoy1oI0M6sX2cWTdsd1BOwPteY3ef8cRaa0t2VPjGgJSiFeMbLzBaZB1m221/S3u1PhYqEBZXHVv7H+fqYjz2yaTPf12s0ohZolrtD6MzVnwFJmcX8QYSSTHr9QFmJA==

      # Points to the hasura service
      GRAPHQL_URL: http://hasura:8080/v1/graphql

      # Following variables are stubbed for development & test
      GOTENBERG_URL: http://gotenberg:3000
    depends_on:
      gotenberg:
        condition: service_healthy
  gotenberg:
    build:
     context: pdf-generator
  data-generator:
    build:
      context: functions/lib
      dockerfile: data-generator/Dockerfile
    environment:
      # Uncomment DEBUG to enable debug logging
      # DEBUG: '1'

      # JWT_KEY is a stub for development & test, it is not valid for any deployed environment
      JWT_KEY: I1J1ffr5N0wPftYwff12ZYtqpWAY1oEcmYxDbdfS7TnEt3a693gjTrXn94s0PmC+ap/S9roPY8gpWENGVNf7YxIjjhkUS+VaE7GvFmoTV5OgKTq0WZxu2hs5rOIoPXpWm6TXroZACZGc8U0BLawmzZclIb4nezyJsWPIUxP+YnQphikH//AMmMsxcDEyDGnyNdObW5SP4Pk+UuV7gKeweMNdoy1oI0M6sX2cWTdsd1BOwPteY3ef8cRaa0t2VPjGgJSiFeMbLzBaZB1m221/S3u1PhYqEBZXHVv7H+fqYjz2yaTPf12s0ohZolrtD6MzVnwFJmcX8QYSSTHr9QFmJA==

      # Points to the hasura service
      GRAPHQL_URL: http://hasura:8080/v1/graphql
    restart: never
volumes:
  db_data:
